apiVersion: apps/v1
kind: Deployment
metadata:
  name: "prometheus-exporter-{{ type }}-{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
  labels:
    prometheus_exporter: "{{ ansible_operator_meta.name }}"
    prometheus_exporter_type: "{{ type }}"
    app: "prometheus-exporter-{{ type }}-{{ ansible_operator_meta.name }}"
{% if extra_label.key is defined and extra_label.value is defined %}
    {{ extra_label.key }}: "{{ extra_label.value }}"
{% endif %}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "prometheus-exporter-{{ type }}-{{ ansible_operator_meta.name }}"
  template:
    metadata:
      labels:
        prometheus_exporter: "{{ ansible_operator_meta.name }}"
        prometheus_exporter_type: "{{ type }}"
        app: "prometheus-exporter-{{ type }}-{{ ansible_operator_meta.name }}"
{% if extra_label.key is defined and extra_label.value is defined %}
        {{ extra_label.key }}: "{{ extra_label.value }}"
{% endif %}
    spec:
      containers:
        - name: "prometheus-exporter-{{ type }}-{{ ansible_operator_meta.name }}"
          image: "{{ image.name | default(image_name) }}:{{ image.version | default(image_version) }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: metrics
              containerPort: {{ port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: metrics
            timeoutSeconds: {{ liveness_probe.timeout_seconds | default(liveness_probe_timeout_seconds) }}
            periodSeconds: {{ liveness_probe.period_seconds | default (liveness_probe_period_seconds) }}
            successThreshold: {{ liveness_probe.success_threshold | default(liveness_probe_success_threshold) }}
            failureThreshold: {{ liveness_probe.failure_threshold | default(liveness_probe_failure_threshold) }}
          readinessProbe:
            tcpSocket:
              port: metrics
            timeoutSeconds: {{ readiness_probe.timeout_seconds | default(readiness_probe_timeout_seconds) }}
            periodSeconds: {{ readiness_probe.period_seconds | default(readiness_probe_period_seconds) }}
            successThreshold: {{ readiness_probe.success_threshold | default(readiness_probe_success_threshold) }}
            failureThreshold: {{ readiness_probe.failure_threshold | default(readiness_probe_failure_threshold) }}
          resources:
            limits:
              cpu: "{{ resources.limits.cpu | default(resources_limits_cpu) }}"
              memory: "{{ resources.limits.memory | default(resources_limits_memory) }}"
            requests:
              cpu: "{{ resources.requests.cpu | default(resources_requests_cpu) }}"
              memory: "{{ resources.requests.memory | default(resources_requests_memory) }}"
{## <container_parameters> ##}
{% filter indent(10, True) %}

{% include "exporters/"+type+"/container.yml.j2" ignore missing %}

{% endfilter %}
{## <container_parameters> ##}
{% if node_selector is defined %}
      nodeSelector:
{% for key, value in node_selector.items() %}
        {{ key | safe }}: {{ value | safe }}
{% endfor %}
{% endif %}

{% if tolerations is defined %}
      tolerations:
{% filter indent(8, True) %}
{{ tolerations | to_nice_yaml }}
{% endfilter %}
{% endif %}

{## <volumes> ##}
{% filter indent(6, True) %}

{% include "exporters/"+type+"/volumes.yml.j2" ignore missing %}

{% endfilter %}
{## <volumes> ##}
