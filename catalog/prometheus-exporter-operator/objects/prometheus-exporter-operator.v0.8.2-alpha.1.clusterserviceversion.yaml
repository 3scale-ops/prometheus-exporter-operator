---
image: quay.io/3scale/prometheus-exporter-operator-bundle:v0.8.2-alpha.1
name: prometheus-exporter-operator.v0.8.2-alpha.1
package: prometheus-exporter-operator
properties:
- type: olm.gvk
  value:
    group: monitoring.3scale.net
    kind: PrometheusExporter
    version: v1alpha1
- type: olm.package
  value:
    packageName: prometheus-exporter-operator
    version: 0.8.2-alpha.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6InByb21ldGhldXMtZXhwb3J0ZXItb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyLW1ldHJpY3MtbW9uaXRvciJ9LCJzcGVjIjp7ImVuZHBvaW50cyI6W3sicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHAifV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoicHJvbWV0aGV1cy1leHBvcnRlci1vcGVyYXRvci1jb250cm9sbGVyLW1hbmFnZXItbWV0cmljcy1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7Im5hbWUiOiJodHRwIiwicG9ydCI6ODA4MCwidGFyZ2V0UG9ydCI6Imh0dHAifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: quay.io/3scale/prometheus-exporter-operator-bundle:v0.8.2-alpha.1
  name: ""
- image: quay.io/3scale/prometheus-exporter-operator:v0.8.2-alpha.1
  name: ""
schema: olm.bundle
